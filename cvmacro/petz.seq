ver no 
chk yes
! Per-element power & Petzval sum statistics
! Dependencies: libgeom

lcl num ^c_x ^c_y ^n ^n_ ^d
lcl num ^h_x ^phi_x ^phi_elt_x ^phi_thin_x ^petz_x ^w_x ^s_x ^Rpetz_x
lcl num ^h_y ^phi_y ^phi_elt_y ^phi_thin_y ^petz_y ^w_y ^s_y ^Rpetz_y
lcl num ^petz_elt_sum_x ^petz_lens_sum_x ^S4x ^Wsum_x ^Ssum_x
lcl num ^petz_elt_sum_y ^petz_lens_sum_y ^S4y ^Wsum_y ^Ssum_y
lcl num ^phi_norm_x ^V0x ^Ainv_cx ^Ainv_stop_x ^delta_umx_n
lcl num ^phi_norm_y ^V0y ^Ainv_cy ^Ainv_stop_y ^delta_umy_n
lcl num ^i_srf ^i_elt ^elt_length ^i_srf_elt_first ^i_srf_elt_last ^i_srf_last ^N_srfs
lcl str  ^fmt_y ^fmt_xy
lcl str ^fmt_header ^fmt_hline ^fmt_s_hline
lcl num ^flag_RSOS ^conjtype

^conjtype == @conj_type
^flag_RSOS == ((sym) = 'ROT')

if ^flag_RSOS
	^fmt_hline  ==  "+----+---------+--------------------------------+---------+---------+---------+"
	^fmt_s_hline == "+----+----'dd'---+-------=|APERTURE|=-------------+---------+---------+---------+"
	^fmt_header ==  "| Elt| Surfaces|     Phi  =  Phi_thin +   dPhi  |    S4i  |   S4_sum|  R_petz |"
else 
	wri 'TODO'
end if
^fmt_y        == "| 'dd' | 'dd' - 'dd' |'4g.4g' ='4g.4g'  +'4g.4g'|'4g.4g'|'4g.4g'|'4g.4g'|"

if (afi) > 1.01
	^i_srf_last == (num s) - 2
else 
	^i_srf_last == (num s) - 1
end if

^Ainv_stop_x == (ind ss)*(icx ss)
^Ainv_stop_y == (ind ss)*(icy ss)

^n_ == (ind s^i_srf_last)	
if ^conjtype = 10 ! revlens
	^phi_norm_x == 1/((umx so))
	^phi_norm_y == 1/((umy so))
else if ^conjtype = 1 ! lens 
	^phi_norm_x == 1/(^n_*(umx s^i_srf_last))
	^phi_norm_y == 1/(^n_*(umy s^i_srf_last))
else 
	^V0x == @Vx
	^V0y == @Vy
	^phi_norm_x == 1/(^n_*(umx s^i_srf_last)*(1-^V0x))
	^phi_norm_y == 1/(^n_*(umy s^i_srf_last)*(1-^V0y))
end if

!======================================================================
^i_elt == 0
^elt_length == 0 ! 1 for singlet, 2 for doublet, etc

^petz_elt_sum_x == 0 ! per cemented group
^petz_elt_sum_y == 0
^petz_lens_sum_x == 0 ! for the whole lens
^petz_lens_sum_y == 0

^phi_thin_x == 0 ! stacked thin element powers are additive
^phi_thin_y == 0

^Wsum_x == 0
^Wsum_y == 0

wri ^fmt_hline
wri ^fmt_header
wri ^fmt_hline
for ^i_srf 1 ^i_srf_last
	^n == (ind s^i_srf-1)
	^n_ == (ind s^i_srf)
	if ^n_ > 1.02 ! we're inside a (cemented) element
		^elt_length == ^elt_length + 1
		
		^c_x == (cux s^i_srf)
		^c_y == (cuy s^i_srf)
		^h_x == (hmx s^i_srf)
		^h_y == (hmy s^i_srf)
		^d == (thi s^i_srf)
		
		^delta_umx_n == (umx s^i_srf)/^n_ - (umx s^i_srf-1)/^n
		^delta_umy_n == (umy s^i_srf)/^n_ - (umy s^i_srf-1)/^n	
		^Ainv_cx == (icx s^i_srf)*^n_
		^Ainv_cy == (icy s^i_srf)*^n_
		^phi_x == ^c_x*(^n_-^n)
		^phi_y == ^c_y*(^n_-^n)
		^w_x == -^phi_x*^h_x*^phi_norm_x
		^w_y == -^phi_y*^h_y*^phi_norm_y
		^s_x == ^Ainv_cx*^delta_umx_n*^phi_norm_x/^Ainv_stop_x
		^s_y == ^Ainv_cy*^delta_umy_n*^phi_norm_y/^Ainv_stop_y
		^phi_thin_x == ^phi_thin_x + ^phi_x
		^phi_thin_y == ^phi_thin_y + ^phi_y		
		^S4x == -^c_x*(1/^n_-1/^n)
		^S4y == -^c_y*(1/^n_-1/^n)
		^petz_elt_sum_x == ^petz_elt_sum_x + ^S4x
		^petz_elt_sum_y == ^petz_elt_sum_y + ^S4y
		^Wsum_x == ^Wsum_x + ^w_x*^w_x
		^Wsum_y == ^Wsum_y + ^w_y*^w_y
		^Ssum_x == ^Ssum_x + ^s_x*^s_x
		^Ssum_y == ^Ssum_y + ^s_y*^s_y
		if (ind s^i_srf+1) < 1.02 ! end of cemented element, airspace follows
			^i_elt == ^i_elt + 1
			^i_srf_elt_last == ^i_srf + 1
			^i_srf_elt_first == ^i_srf_elt_last - ^elt_length
			^phi_elt_x == 1/(efx s^i_srf_elt_first..^i_srf_elt_last)
			^phi_elt_y == 1/(efy s^i_srf_elt_first..^i_srf_elt_last)
			^petz_lens_sum_x == ^petz_lens_sum_x + ^petz_elt_sum_x
			^petz_lens_sum_y == ^petz_lens_sum_y + ^petz_elt_sum_y
			^Rpetz_x == 1/^petz_lens_sum_x
			^Rpetz_y == 1/^petz_lens_sum_y
			! print element
			if ^flag_RSOS 
				wri Q^fmt_y ^i_elt ^i_srf_elt_first ^i_srf_elt_last &
					^phi_elt_y ^phi_thin_y (^phi_elt_y-^phi_thin_y) &
					^petz_elt_sum_y ^petz_lens_sum_y ^Rpetz_y
			end if
			^petz_elt_sum_x == 0
			^petz_elt_sum_y == 0
			^phi_thin_x == 0
			^phi_thin_y == 0
			^elt_length == 0
		end if
	else if ^i_srf = (sto)
		wri Q^fmt_s_hline ^i_srf
	end if
end for
wri ^fmt_hline

^Wsum_x == sqrtf(^Wsum_x/^i_srf_last)
^Wsum_y == sqrtf(^Wsum_y/^i_srf_last)
^Ssum_x == sqrtf(^Ssum_x/^i_srf_last)
^Ssum_y == sqrtf(^Ssum_y/^i_srf_last)

if ^flag_RSOS 
	wri Q"W = 'd.dd', S = 'd.dd'" ^Wsum_y ^Ssum_y
else 
	wri Q"YZ: W = 'd.dd', S = 'd.dd'" ^Wsum_y ^Ssum_y
	wri Q"XZ: W = 'd.dd', S = 'd.dd'" ^Wsum_x ^Ssum_x	
end if

lbl EXIT
chk no
ver yes